# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push to Docker Hub
  jobs:
  - job: Build_Web
    displayName: Build and Push Web
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: /usr/bin/docker build --pull -t micmunger/8cld202:web -f ./SWARM/web/Dockerfile ./
        displayName: Build
      - script: /usr/bin/docker login -u $(username) -p $(password) docker.io && /usr/bin/docker push micmunger/8cld202:web
        displayName: Push  
  
  - job: Build_MySQL_API
    displayName: Build and Push MySQL_API
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: /usr/bin/docker build --pull -t micmunger/8cld202:mysql_api -f ./SWARM/mysql_api/Dockerfile ./
        displayName: Build
      - script: /usr/bin/docker login -u $(username) -p $(password) docker.io && /usr/bin/docker push micmunger/8cld202:mysql_api
        displayName: Push

  - job: Build_IoT_API
    displayName: Build and Push IoT_API
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: /usr/bin/docker build --pull -t micmunger/8cld202:iot_api -f ./SWARM/iot_api/Dockerfile ./ && /usr/bin/docker login -u $(username) -p $(password) docker.io && /usr/bin/docker push micmunger/8cld202:iot_api
        displayName: Build
      - script: /usr/bin/docker build --pull -t micmunger/8cld202:iot_api -f ./SWARM/iot_api/Dockerfile ./ && /usr/bin/docker login -u $(username) -p $(password) docker.io && /usr/bin/docker push micmunger/8cld202:iot_api
        displayName: Push
  
  - job: Build_MySQL_DB
    displayName: Build and Push MySQL_DB
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: /usr/bin/docker build --pull -t micmunger/8cld202:mysql_db ./MySQL_DB 
        displayName: Build
      - script: /usr/bin/docker login -u $(username) -p $(password) docker.io && /usr/bin/docker push micmunger/8cld202:mysql_db
        displayName: Push
  
  - job: Build_IoT_DB
    displayName: Build and Push IoT_DB
    pool:
      vmImage: ubuntu-latest
    steps:  
      - script: /usr/bin/docker build --pull -t micmunger/8cld202:iot_db ./IoT_DB 
        displayName: Build
      - script: /usr/bin/docker login -u $(username) -p $(password) docker.io && /usr/bin/docker push micmunger/8cld202:iot_db
        displayName: Push

- stage: Start
  displayName: Start Azure VMs
  jobs:
  - job: Start
    displayName: Start Master-MySQL
    pool:
      vmImage: ubuntu-latest
    steps:      
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure subscription 1(1aab54f1-babe-4322-95b4-185df45b9d75)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az vm start --resource-group CLD202 --name Worker-IoT --subscription 1aab54f1-babe-4322-95b4-185df45b9d75'